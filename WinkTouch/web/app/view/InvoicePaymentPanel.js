/*
 * File: app/view/InvoiceItemPanel.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('WINK.view.InvoicePaymentPanel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.invoicepaymentpanel',
    requires: [
        'Ext.Label',
        'Ext.field.Number',
        'Ext.field.Select',
        'Ext.Button',
        'WINK.view.PriceField',
        'WINK.view.IntField'

    ],
    deleteItem: function() {
        var invoicePanel = this.up('InvoicePanel');
        invoicePanel.deletePayment(this);
    },
    loadItem: function(item) {
        this.setRecord(item);
    },
    getAmount: function() {
        var amountField = this.down('numberfield[name=amount]');
        return amountField.getValue();
    },
    updateModel:function(){
        var model = this.getRecord();
         var temp = this.getValues();
        
       model.set(temp);
      return model;
    },
    updateInvoiceBalance: function() {
        var invoicePanel = this.up('InvoicePanel');
        if (invoicePanel) //this, might not been added to the invoice panel yet
            invoicePanel.updateSummary();
    },
    config: {
        invoiceItemIndex: 0,
        border: '0 0 1 0',
        height: 50,
        style: 'border-style:solid; border-color:darkgrey',
        scrollable: false,
        layout: {
            type: 'hbox',
            align: 'center'
        },
        items: [
            {
                xtype: 'datepickerfield',
                required: true,
                margin: '0 2 0 2',
                usePicker: true,
                name: 'date',
                width: 150,
                style: 'borderInput'
            },
            {
                xtype: 'selectfield',
                required: true,
                margin: '0 2 0 0',
                displayField: 'name',
                store: 'PaymentMethodForCurrentStore',
                usePicker: true,
                valueField: 'id',
                width: 150,
                name: 'paymentmethod_idpaymentmethod',
                style: 'borderInput'
            },
            {
                xtype: 'textfield',
                cls: 'inputBorder',
                margin: '0 2 0 0',
                style: 'borderInput',
                flex: 1,
                clearIcon: false,
                inputCls: 'inputAmount',
                name: 'description'

            },
            {
                xtype: 'pricefield',
                cls: 'inputBorder',
                margin: '0 2 0 0',
                style: 'borderInput',
                width: 100,
                clearIcon: false,
                inputCls: 'inputAmount',
                value: 0,
                autoComplete: false,
                autoCorrect: true,
                maxValue: 999999,
                minValue: -999999,
                name: 'amount',
                listeners: {
                    change: function(comp, newData, eOpts) {
                        // alert('qty update data');
                        comp.up('invoicepaymentpanel').updateInvoiceBalance();
                    }
                }
            },
            {
                xtype: 'button',
                height: 40,
                margin: '0 2 0 2',
                ui: 'decline-small',
                width: 50,
                text: 'Del',
                //iconCls:'delete',
                //iconMask:true,
                handler: function(b) {
                    b.up('invoicepaymentpanel').deleteItem();
                }
            }


        ]

    }

});