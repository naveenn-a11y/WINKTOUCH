["function _7debdda24f24e4cb154c4a922867332021b940b5(){};",258927,37,92,1048484,1048576,1048576,2097152,499896,"57",193040,38,1285408,34,2597122,1674,"updateHasManyAssociation",2588435,34,"var me = model;\r\n            var associations = me.associations.items;\r\n            var",1759612,39,";\r\n            var association, associatedStore, type, name, foreignKey, filterProperty, filters, filter;\r\n            var newId = model.getId()",613533,35,1759927,38,1759961,48,1760059,47,"    if (type)  {\r\n                    type = ",1653852,37,2915660,37,3023638,47,"foreignKey = association.getForeignKey();\r\n                switch (type) {\r\n                    case 'hasmany':\r\n",1761940,34,"Store = me[association.store",223901,36,"associatedStor",104096,34,"// update store associated foreign key",2473152,33,"    // for items are already added to store",2474401,32,93584,34,1760671,55,"            associatedStore",1441244,44,"                item.set(foreignKey, newI",1761664,33,2934031,37,"}",2474401,33,"update store `modelDefaults` foreign key property",2474401,33,"for future items",2474401,32,"\r\n                            filterProperty = association.getFilterProperty() || foreignKey;\r\n",1761936,38,"Store.modelDefaults[filterProperty] = newId;",2474401,33,"update store filte",680029,33,"    // for saving/loading store operations",2474401,32,"\r\n                            filters = associatedStore.filter",149069,32,"filter = filters.getAt(filters.findIndex('property', filterProperty)",194416,32,"if (",1451117,35,"        filter.setValue(newI",1761664,33,"}\r\n    ",5695,40,388272,59,2598785,224575,2823359,134,"= 1",2823748,34,"Exam",2823663,83,2823615,131,2823745,129,2823873,128,2824000,30175,"this.destroyAllPatientHistoryPanels(",2854155,1363,"this.destroyAllPatientHistoryPanels();\n",2854166,74,2855583,213,"destroyAllPatientHistoryPanels: function() {\r\n        return;\r\n",3011639,74,";\r\n",2903305,41,"var arrayLength = historyPanel.length",613533,35,"array",179242,32,"historyPanel[i]",2399984,37,"\r\n    },",2855790,62,"this.destroyAllPatientHistoryPanels();\r\n",2854167,83,2846365,35,2855962,46412,2902336,32,"Id(",2902373,3122,"WINK.Utilities.updateHasManyAssociations(",2902701,34,2905495,66," + \" \" + patientinvoice.internalId",2905561,1860,"Ext.Msg.alert(\"Delete Invoice\", \"Please Use WINK Desktop to Delete the Invoice.\"",2907444,611,"if (this.rxworksheets) {",613534,34,2908075,46,2908117,64,2908177,60,368496,34,2908256,2167,"tient",2910426,1711,2910391,32,"tient",2910426,38," + ' ' + patientinvoice.getId()",2912125,92796,"[winkname=patienthistorytree]",3004921,6726,"//",3011647,70," -- this is no good because each time we create a PatientHistoryPanel , they do not get discarded once we're done with it. Therefore, we might be adding the invoice in the wrong patienthistorypanel",94480,42,3011631,35,"c",2901647,37,47312,42,1905600,54,47312,32,3011855,1831,"winkname: 'patienthistorytree',\r\n",2876047,50,2899326,62,"\r\n",3011516,36,2898653,65,214544,54,2974300,56,3013995,39730]