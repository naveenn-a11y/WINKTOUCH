["function _7debdda24f24e4cb154c4a922867332021b940b5(){};",258927,37,92,1048484,1048576,1048576,2097152,493186,"//",2590338,40,"    return d",2590357,34,2590424,6622,"57",193040,38,1285408,34,2597120,1674,"updateHasManyAssociation",2588435,34,"var me = model;\r\n            var associations = me.associations.items;\r\n            var",1759612,39,";\r\n            var association, associatedStore, type, name, foreignKey, filterProperty, filters, filter;\r\n            var newId = model.getId();",2925888,34,1759927,38,1759961,48,1760059,47,"    if (type)  {\r\n                    type = ",1653852,37,2823552,37,3023610,47,"foreignKey = association.getForeignKey();\r\n                switch (type) {\r\n                    case 'hasmany':\r\n",1761940,34,"Store = me[association.store",223901,36,"associatedStor",104096,34,"// update store associated foreign key",2473152,33,"    // for items are already added to store",2474401,32,93584,34,1760671,55,"            associatedStore",1441244,44,"                item.set(foreignKey, newI",1761664,33,87119,33,661312,38,"update store `modelDefaults` foreign key property",2474401,33,"for future items",2474401,32,"\r\n                            filterProperty = association.getFilterProperty() || foreignKey;\r\n",1761936,38,"Store.modelDefaults[filterProperty] = newId;",2474401,33,"update store filte",680029,33,"    // for saving/loading store operations",2474401,32,"\r\n                            filters = associatedStore.filter",149069,32,"filter = filters.getAt(filters.findIndex('property', filterProperty)",194416,32,"if (",1451117,35,"        filter.setValue(newI",1761664,33,"}\r\n    ",5695,40,388272,59,2598783,224575,"=",3048191,36,2823394,97,"= 1",2823360,34,"Exam",2823408,83,2823613,131,2823743,129,2823871,128,2823998,30175,"this.destroyAllPatientHistoryPanels(",2854153,1363,"this.destroyAllPatientHistoryPanels();\n",2854164,74,2855581,213,"destroyAllPatientHistoryPanels: function() {\r\n        return;\r\n",3011611,74,";\r\n",2902512,41,"var arrayLength = historyPanel.length;",2925888,34,"array",179242,32,"historyPanel[i]",2399984,37,"\r\n    },",2855788,62,"this.destroyAllPatientHistoryPanels();",2855840,46532,2902334,32,"Id(",2902371,3122,"WINK.Utilities.updateHasManyAssociations(",2902699,34,2902448,33,2905526,33," + \" \" + patientinvoice.internalId",2905559,1860,"Ext.Msg.alert(\"Delete Invoice\", \"Please Use WINK Desktop to Delete the Invoice.\"",2907442,611,"if (this.rxworksheets)",2924127,41,2908078,41,2908115,64,2908175,60,368496,34,2908254,2167,"tient",2910424,1711,2910389,32,"tient",2910424,38," + ' ' + patientinvoice.getId()",2912123,73349,"new Date().getFullYear() - 11",2937200,40,2985515,19378,"[winkname=patienthistorytree]",3004893,6726,"//",3011619,70," -- this is no good because each time we create a PatientHistoryPanel , they do not get discarded once we're done with it. Therefore, we might be adding the invoice in the wrong patienthistorypanel",94480,42,3011603,35,"c",2901645,37,47312,42,1905600,54,47312,32,3012137,84,2935472,47,3011958,1700,"winkname: 'patienthistorytree',\r\n",2870895,50,3011392,88,2898639,77,214544,54,2829980,56,3013967,39730]