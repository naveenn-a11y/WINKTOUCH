/**
 * @flow
 */
'use strict';

import AsyncStorage from '@react-native-async-storage/async-storage';
import LocalizedStrings from 'react-native-localization';
import Moment from 'moment';
import {cacheDefinitions} from './Items';

export const strings = new LocalizedStrings({
  en: {
    enterRegisteredEmail:
      'Please enter your email adress to connect to your WINK database\nor try with a demo database',
    trialWarning:
      'This is a demo version that uses a public shared database. Do not enter any real patient data.',
    winkLink: 'Visit www.winksoftware.com to learn more',
    emailAdres: 'Email adress',
    connectToPms: 'Connect',
    tryForFree: 'Try it out',
    answerSecurityQuestion:
      'Please answer the security question before submitting',
    submitSecurityAnswer: 'Send',
    unRegisteredEmail: 'This email adress was not registered before with Wink',
    userName: 'User name',
    password: 'password',
    enterCode: 'Enter Code',
    submitLogin: 'Login',
    verifyCode: 'Verify',
    touchNotConfigured:
      'Your account is not set up to use the mobile app yet. Please contact customer support.',
    registrationScreenTitle: 'WINKemr registration',
    loginscreenTitle: 'WINKemr login',
    mfaCodeVerificationTitle: 'WINKemr code verification',
    mfaCodeScanTitle: 'WINKemr QR Code scan',
    mfaCodeScanned: 'I have scanned the code',
    account: 'Account',
    store: 'Store',
    securityQuestionsError:
      'Something went wrong trying to get the secuirty question from the server. Please try again.',
    registrationError:
      'Something went wrong trying to get the app version from the server. Please try again.',
    fetchAccountsError:
      'Something went wrong trying to get the accounts from the server. Please try again.',
    loginFailed: 'Login failed',
    calendar: 'Calendar',
    patient: 'Patient',
    back: 'Back',
    graph: 'Graph',
    history: 'History',
    template: 'Template',
    templates: 'Templates',
    settings: 'Settings',
    openFile: 'Patient file',
    startAppointment: 'Start visit',
    addVisit: 'Add consultation',
    createPatient: 'Create patient',
    logout: 'Logout',
    newPatient: 'New patient',
    newDoctor: 'Add a doctor',
    newAppointment: 'Reserve Appointment',
    preExams: 'Pre test',
    exams: 'Exams',
    odSphere: 'OD Sphere',
    odCylinder: 'OD Cylinder',
    odAxis: 'OD Axis',
    odBase: 'OD Base',
    odPrism: 'OD Prism',
    odAdd: 'OD Add',
    osSphere: 'OS Sphere',
    osCylinder: 'OS Cylinder',
    osAxis: 'OS Axis',
    osBase: 'OS Base',
    osPrism: 'OS Prism',
    osAdd: 'OS Add',
    allNormal: 'All normal',
    othersNormal: 'Others normal',
    paperForm: 'Paper form',
    predefinedOptions: 'Predefined options',
    selectionLists: 'Selection lists',
    groupedForm: 'Grouped form',
    refractionTest: 'Refraction test',
    small: 'Small',
    medium: 'Medium',
    large: 'Large',
    extraLarge: 'Extra large',
    duplicate: 'Duplicate',
    serverError:
      'Something went wrong on the server. Please try again.\n\n(Internal error = {0})',
    pending: 'Pending',
    confirmed: 'Confirmed',
    cancelled: 'Cancelled',
    noShow: 'No Patient',
    waiting: 'Waiting',
    waitingList: 'Waiting List',
    waitingListComment: 'Waiting List Comment',
    completed: 'Completed',
    start: 'Start',
    scheduledAt: 'Scheduled at',
    forDuration: 'for',
    end: 'End',
    duration: 'Duration',
    minutes: 'minutes',
    minute: 'minute',
    hours: 'hours',
    day: 'day',
    days: 'days',
    halfAnHour: 'half an hour',
    status: 'Status',
    doctor: 'Doctor',
    now: 'Now',
    today: 'Today',
    yesterday: 'Yesterday',
    beforeYesterday: 'Before yesterday',
    tomorrow: 'Tomorrow',
    in2Days: 'In 2 days',
    lockVisit: 'Lock',
    complete: 'Complete',
    years: 'years',
    ageM: 'age',
    ageF: 'age',
    recall: 'Recall',
    noAccountsWarning:
      'There are no accounts compatible with this version of WINKemr.',
    sign: 'Sign',
    signed: 'Signed',
    diagnosis: 'Diagnosis',
    referral: 'Referral',
    finalRx: 'Final Rx',
    printRx: 'Print Rx',
    transferRx: 'Share Rx',
    printClRx: 'Print ClRx',
    printReferral: 'Print Referral',
    printMedicalRx: 'Print Medical Rx',
    printPatientFile: 'Print Patient File',
    patientFile: 'Patient File',
    add: 'Add',
    remove: 'Remove',
    od: 'OD',
    os: 'OS',
    ou: 'OU',
    far: 'Far',
    near: 'Near',
    maxLengthError: 'Too much text',
    minLengthError: 'Not enough text',
    requiredError: 'Mandatory',
    resume: 'Summary',
    restart: 'Restart',
    addFavorite: 'Add favorite',
    clear: 'Clear',
    favorites: 'Common',
    notStarted: 'New exam',
    copyToFinal: 'Final Rx',
    update: 'Update',
    errorTitle: 'Error',
    errorsTitle: 'Errors',
    validationErrorMessage: 'Please verify all fields contain valid values.',
    refractionTitle: 'Rx',
    removeExamError: 'Please clear all the exam data before removing an exam.',
    unsupportedDocumentError: 'Document {0} can not be displayed.',
    documentTrailTitle: '{0}',
    medicationRxTitle: 'Medication Rx',
    summaryTitle: 'Summary',
    fetchItemError:
      'Something went wrong trying to get {0} data from the server. Please try again.\n\n(Internal error = {1})',
    storeItemError:
      'Something went wrong trying to save {0} data on the server.\n\n(Internal error = {1})',
    initialiseError:
      'Something went wrong while initialising. Please kill and restart the app.\n\n(Internal error fetching {0} = {1})',
    maximumAddableGroupError: 'You can not add more then {0} {1}.',
    doctorWithoutVisitTypeError:
      'Doctor {0} is not set up for the EMR yet in the database.',
    searchCriteriumMissingError: 'Please enter a search criterium.',
    noPatientsFound: 'No patients found',
    noDoctorsFound: 'No doctors found',
    drawingNotSavedWarning: 'Attention: Your last drawing was not saved.',
    scanEmailTitle: 'Patient file {0}',
    scanEmailBody:
      '<p>Please find attached the {0} for patient {1}.</p><p>Have a nice day</p><p>{2}</p>',
    emailAppUnavailableError: 'Please configure the iPad email app.',
    updateAppStore: 'Please update the WINKemr app in the apple appstore.',
    cancel: 'Cancel',
    confirm: 'Confirm',
    send: 'Send',
    deleteVisitTitle: 'Delete consultation',
    deleteVisitQuestion:
      'Are you sure you want to permanently delete the {0} of {1} ?',
    deletedVisitMessage: 'Cannot open deleted visits !',
    findPatient: 'Search by patient name or #Z',
    findDoctor: "Search by doctor's name",
    visit: 'Consultation',
    translate: 'Translate',
    stopTranslating: 'Stop translating',
    document: 'document',
    importDataQuestion: 'Please choose to import',
    configuration: 'Config',
    nameStar: 'Please give the star a name',
    during: 'During',
    drSignature: 'Dr Signature',
    signedDate: 'Signed Date',
    futureVisitDateError: "You can't add a consultation in the future",
    saveImageError:
      'Something went wrong saving your {0} image in the database. Please try again.',
    pmsImageSaveError:
      'Something went wrong while saving your image in the PMS. You can try again.',
    examDate: 'Date of Exam',
    healthCard: 'Health Card',
    configMissing:
      'Please go back to the first page and configure the {0} you want to use via the Config menu button.',
    emailSuccess: 'Email sent successfully to {0}',
    faxSuccess: 'Fax sent successfully to {0}',
    referralSuccess: 'Referral sent successfully to {0}',
    referringPatientTo: 'Referring patient to ',
    doctorReferralMissing: 'Please select the doctor',
    digitalSignatureMissing:
      'Please insert and place your digital signature field first',
    followUpTitle: 'Follow Up',
    dynamicField: 'Dynamic field',
    findRow: 'Search',
    view: 'View',
    quickReply: 'Quick Reply',
    edit: 'Edit',
    resend: 'Resend',
    forward: 'Forward',
    noDataFound: 'No Existing Referral Letter !',
    deleteTitle: 'Delete',
    deleteReferralQuestion:
      'Are you sure you want to delete the referral {0} of {1} ?',
    manageUsers: 'Doctors',
    deleteReferralTitle: 'Delete referral',
    customisation: 'Customise',
    from: 'From',
    to: 'To',
    date: 'Date/Time',
    comment: 'Comment',
    itemNotSelected: 'No item was selected',
    importDataNotFound: 'No data found to import !',
    consultationDate: 'Consultation date',
    close: 'Close',
    apply: 'Apply',
    open: 'Open',
    select: 'Select',
    chooseDoctor: 'Choose Doctor',
    transferRxSuccess: 'Rx transferred successfully !',
    exportDataSuccess: 'Data exported successfully !',
    NoCameraAccess: 'No access to camera',
    flip: 'Flip',
    snapshot: 'Snapshot',
    somethingWentWrongTitle: 'Oops! Something went wrong.',
    somethingWentWrongMessage:
      'Sorry, Something went wrong there. See the action below !',
    restartApp: 'Click here to restart the app !',
    dragNDrop: 'Click to upload or drag and drop your file here',
    takePicture: 'Take a picture',
    uploadFile: 'Upload a file',
    signedOn: 'Signed on',
    location: 'Location',
    noAccess: 'You do not have access to this information',
    printRxLabel: 'Please select what to print:',
    printExportLabel: 'Please select what to export:',
    pd: 'PD',
    binocularPd: 'Binocular PD',
    notesOnRx: 'Notes on Rx',
    drRecommendation: 'Dr Recommendation ',
    all: 'All',
    startBlank: 'Start blank',
    noRoom: 'No room',
    room: 'Room',
    startFromVisit: 'Start from previous consultation',
    lockedOn: 'Locked on',
    lastUpdateOn: 'Last update on',
    lastUpdateBy: 'Last update by',
    visitDeniedAccessError:
      'You do not have access to view this patient file !',
    deniedAccessTitle: 'Access Denied',
    documentSize: 'Document Size',
    documentCategory: 'Document Category',
    attachment: 'Attachment',
    documentName: 'Document Name',
    addExamMessage: 'Add a new exam',
    pdfNotSupported:
      'This PDF file cannot be attached to the referral at this time. Our team is currently working on making this possible and you will be notified when it will be available!',
    dob: 'DOB',
    previous: 'Previous',
    next: 'Next',
    weekly: 'Weekly',
    daily: 'Daily',
    available: 'Available',
    unAvailable: 'Not Available',
    lensometry: 'Lensometry',
    keratometry: 'Keratometry',
    autoRefractor: 'Auto Refractor',
    exportAction: 'Export',
    billing: 'Billing',
    multipleBuiltInTemplate:
      'More than 1 template was found, please select which one to use !',
    machinePullSuccess: 'Machine Interface has pulled successfully the data !',
    clientConnected: 'Client connected !',
    clientDisconnected: 'Client disconnected !',
    patientAttachments: 'Patient Attachments',
    appointmentFor: 'Appointment for',
    successfullyCopied:
      'was successfully copied! Please move it to an available cell.',
    selfPaid: 'Self Paid',
    bookingAppointmentError:
      'This appointment might have already been booked on another computer, or the number of slots requested are not free !',
    insurer: 'Insurer',
    numberOfSlots: 'Number of Slots',
    book: 'Book',
    AppointmentType: 'Appointment Type',
    cancelAppointment: 'Cancel Appointment ',
    cancelledBy: 'Cancelled By',
    rescheduleAppointment: 'Reschedule Appointment',
    reschedule: 'Reschedule',
    viewWaitingList: 'View waiting list',
    showAllStores: 'Show Waiting List For All Stores',
    age: 'Age',
    home: 'Home',
    cell: 'Cell',
    work: 'Work',
    appDateAndTime: 'Appointment Date & Type',
    successfullyRescheduled: 'Appointment has been successfully rescheduled',
    lockScreenTitle: 'Your Session has Expired',
    enterPassword: 'Enter your password to pick up from where you left',
    notLabel: 'Not',
    resumeSession: 'Resume Session',
    iForgot: 'I forgot',
    doubleBook: 'Double Book ',
    sameSlot: 'Same Slot',
    first: 'First',
    last: 'Last',
    mins: 'mins',
    hour: 'hour',
    copyMessage:
      'Data was copied successfully, please paste it in the appropriate box',
    finalRxCopyMessage:
      "Final Rx copied successfully! Please paste in the current visit's appropriate box",
    time: 'Time',
    createAvailability: 'Create Availability',
    markAsUnavailable: 'Mark as unavailable',
    familyDoctor: 'Family Doctor',
    createUser: 'Create User',
    closedStoreTimeSlotErrorMessage:
      'The time slot you selected is outside store opening hours. You cannot create an availability !',
    providerTitle: 'Provider',
    loadMoreSummariesTitle: 'Load more summaries...',
    reset: 'Reset',
    emailRx: 'Email Rx',
    emailClRx: 'Email CLRx',
    emailRxSuccess: 'Rx sent successfully',
    createInvoice: 'Create Invoice',
    invoiceAgain: 'Invoice Again',
    invoiceCreatedSuccessMessage: 'Invoice(s) {0} successfully created!',
    NoinvoiceCreatedMessage: 'No invoice created for this appointment!',
    support: 'Support',
    agentAssumptionTitle: 'Agent Assumption Form',
    zendesk: 'Zendesk #',
    reason: 'Reason',
    agentLoginWarning:
      'This is a production account that uses private data. Do not enter any real patient data!',
  },
  fr: {
    enterRegisteredEmail:
      'Veuillez entrer votre adresse courriel pour vous connecter à votre base de donées WINK\nou pour commencer un essai',
    trialWarning:
      "Ceci est la version d'essai qui utilise une base de données publique partagée. N'entrez aucune donnée réelle sur le patient. ",
    winkLink: 'Visitez www.winksoftware.com',
    emailAdres: 'Adresse courriel',
    connectToPms: 'Se connecter',
    tryForFree: 'Essayer',
    answerSecurityQuestion:
      'Veuillez répondre à la question de sécurité avant de soumettre la réponse',
    submitSecurityAnswer: 'Soumettre',
    unRegisteredEmail:
      "Cette adresse courriel n'a pas été enregistrée précédemment avec Wink",
    userName: "Nom d'utilisateur",
    password: 'Mot de passe',
    enterCode: 'Entrez le code',
    submitLogin: 'Ouvrir la session',
    verifyCode: 'Vérifier',
    touchNotConfigured:
      "Votre compte n'est pas configuré pour utiliser l'application mobile à cet instant. Veuillez contacter le service à la clientèle",
    registrationScreenTitle: 'Registration WINKemr',
    loginscreenTitle: 'Se connecter à WINKemr',
    mfaCodeVerificationTitle: 'Vérification du code WINKemr',
    mfaCodeScanTitle: 'Numérisation du code QR WINKemr',
    mfaCodeScanned: "J'ai scanné le code",
    account: 'Compte',
    store: 'Magasin',
    securityQuestionsError:
      "Une erreur s'est produite en validant la question de sécurité. Veuillez réessayer.",
    registrationError:
      "Une erreur s'est produite en cherchant la version de l'application mobile. Veuillez réessayer.",
    fetchAccountsError:
      "Une erreur s'est produite en cherchant vos comptes. Veuillez réessayer.",
    loginFailed: "Erreur d'authentification",
    calendar: 'Calendrier',
    patient: 'Patient',
    back: 'Back',
    graph: 'Graphique',
    history: 'Historique',
    template: 'Modèle',
    templates: 'Modèles',
    settings: 'Paramètres',
    openFile: 'Dossier patient',
    startAppointment: 'Commencer',
    addVisit: 'Ajouter une consultation',
    createPatient: 'Ajouter un patient',
    logout: 'Déconnexion',
    newPatient: 'Nouveau patient',
    newDoctor: 'Ajouter docteur',
    newAppointment: 'Réservation rendez-vous',
    preExams: 'Prétests',
    exams: 'Examens',
    odSphere: 'OD Sphere',
    odCylinder: 'OD Cylinder',
    odAxis: 'OD Axis',
    odBase: 'OD Base',
    odPrism: 'OD Prism',
    odAdd: 'OD Add',
    osSphere: 'OS Sphere',
    osCylinder: 'OS Cylinder',
    osAxis: 'OS Axis',
    osBase: 'OS Base',
    osPrism: 'OS Prism',
    osAdd: 'OS Add',
    allNormal: 'Tous normaux',
    othersNormal: 'Autres normaux',
    paperForm: 'Paper form',
    predefinedOptions: 'Predefined options',
    selectionLists: 'Selection lists',
    groupedForm: 'Grouped form',
    refractionTest: 'Refraction test',
    small: 'Small',
    medium: 'Medium',
    large: 'Large',
    extraLarge: 'Extra large',
    duplicate: 'Duplicate',
    serverError:
      "Une erreur s'est produite sur le serveur. Veuillez réessayer.\n\n(Erreur interne = {0})",
    pending: 'En attente',
    confirmed: 'confirmé',
    cancelled: 'Annulé',
    noShow: "Ne s'est pas présenté",
    waiting: 'En attente',
    viewWaitingList: "Afficher liste d'attente",
    waitingList: "Liste d'attente",
    waitingListComment: "Commentaire Liste d'attente",
    completed: 'Completé',
    start: 'Début',
    scheduledAt: 'Planifié pour',
    forDuration: 'pour',
    end: 'Fin',
    duration: 'Durée',
    minutes: 'minutes',
    minute: 'minute',
    hour: 'heure',
    hours: 'heures',
    day: 'jour',
    days: 'jours',
    halfAnHour: 'une demi-heure',
    status: 'Statut',
    doctor: 'Docteur',
    now: 'Maintenant',
    today: "Aujourd'hui",
    yesterday: 'Hier',
    beforeYesterday: 'Avant hier',
    tomorrow: 'Demain',
    in2Days: 'Dans 2 jours',
    lockVisit: 'Vérouiller ',
    complete: 'Compléter',
    years: 'ans',
    ageM: 'âgé de',
    ageF: 'âgée de',
    recall: 'Rappel',
    noAccountsWarning:
      "Ce compte n'est pas accessible avec cette version de WINKemr.",
    sign: 'Signer',
    signed: 'Signé',
    diagnosis: 'Diagnostique',
    referral: 'Référence',
    finalRx: 'Rx Finale',
    printRx: 'Imprimer Rx',
    transferRx: 'Partager Rx',
    printClRx: 'Imprimer RxVC',
    printReferral: 'Imprimer Référence',
    printMedicalRx: 'Imprimer Rx médicale',
    printPatientFile: 'Imprimer Dossier Patient',
    patientFile: 'Dossier Patient',
    add: 'Ajouter',
    remove: 'Suprimer',
    od: 'OD',
    os: 'OS',
    ou: 'OU',
    far: 'Loin',
    near: 'Près',
    maxLengthError: 'Trop de texte',
    minLengthError: 'Pas assez de texte',
    requiredError: 'Obligatoire',
    resume: 'Résumé',
    restart: 'Redémarrer',
    addFavorite: 'Ajouter favori',
    clear: 'Supprimer',
    favorites: 'Favoris',
    notStarted: 'Nouvel examen',
    copyToFinal: 'Rx finale',
    update: 'Confirmer',
    errorTitle: 'Erreur',
    errorsTitle: 'Erreurs',
    validationErrorMessage:
      'Veuillez vérifier que tout les champs ont des valeurs valides.',
    refractionTitle: 'Rx',
    removeExamError:
      "Veuillez effacer toutes les données avant de supprimer l'examen",
    unsupportedDocumentError: "Document {0} n'est pas supporté.",
    documentTrailTitle: '{0}',
    medicationRxTitle: 'Rx médicament',
    summaryTitle: 'Résumé',
    fetchItemError:
      "Une erreur s'est produite en chargeant les données. Veuillez essayer de nouveau.\n\n(Erreur interne = {1})",
    storeItemError:
      "Une erreur s'est produite en sauvegardant les données sur le serveur.\n\n(Erreur interne = {1})",
    initialiseError:
      "Une erreur s'est produite au demarage. Veuillez redémarrer l'application.\n\n(Erreur interne en chargeant {0} = {1})",
    maximumAddableGroupError: 'Vous ne pouvez pas ajouter plus que {0} {1}.',
    doctorWithoutVisitTypeError:
      "Docteur {0} n'est pas encore configuré pour utiliser l'application mobile.",
    searchCriteriumMissingError:
      'Veuillez entrez un critère pour la recherche.',
    noPatientsFound: 'Aucun patient trouvé',
    noDoctorsFound: 'Aucun docteur trouvé',
    drawingNotSavedWarning:
      "Attention: Votre dernière annotation n'a pas été sauvegardée.",
    scanEmailTitle: 'Dossier patient {0}',
    scanEmailBody:
      '<p>Veuillez trouvez le {0} pour patient {1}.</p><p>Cordialement</p><p>{2}</p>',
    emailAppUnavailableError:
      "Vous devez d'abord configurer l'application courriel sur votre iPad.",
    updateAppStore:
      "Veuillez effectuer les mises à jour pour WINKemr dans l'App store",
    cancel: 'Annuler',
    confirm: 'Confirmer',
    send: 'Envoyer',
    deleteVisitTitle: 'Supprimer une consultation',
    deleteVisitQuestion:
      'Est-ce que vous êtes sur de vouloir supprimer {0} du {1} de façon permanente ?',
    deletedVisitMessage: "Impossible d'ouvrir les visites supprimées !",
    findPatient: 'Entrer le nom du patient ou le #Z',
    findDoctor: 'Entrer le nom du docteur',
    visit: 'Consultation',
    translate: 'Traduire',
    stopTranslating: 'Arreter de traduire',
    document: 'document',
    importDataQuestion: 'Veuillez choisir pour importer',
    configuration: 'Config',
    nameStar: 'Please give the star a name',
    during: 'Pendant',
    drSignature: 'Signature Dr',
    signedDate: 'Signé le',
    futureVisitDateError:
      'Vous ne pouvez pas ajouter une consultation dans le futur.',
    saveImageError:
      "Une erreur s'est produite en sauvegardant l'image {0} dans la base de données. Veuillez essayer de nouveau.",
    pmsImageSaveError:
      "Une erreur s'est produite en sauvegardant l'image dans le PMS",
    examDate: "Date de l'exam",
    healthCard: 'Carte maladie',
    configMissing:
      'Please go back to the first page and configure the {0} you want to use via the Config menu button.',
    emailSuccess: 'Email envoyé avec succès à {0}',
    faxSuccess: 'Fax envoyé avec succès à {0}',
    referralSuccess: 'Référence envoyé avec succès à {0}',
    referringPatientTo: 'Référer le patient à ',
    doctorReferralMissing: 'Veuillez sélectionner le docteur',
    digitalSignatureMissing: 'Veuillez avant insérer et placer votre signature',
    followUpTitle: 'Suivi',
    dynamicField: 'Champ dynamique',
    findRow: 'Recherche',
    view: 'Afficher',
    quickReply: 'Répondre',
    edit: 'Modifier',
    resend: 'Renvoyer',
    forward: 'Transférer',
    noDataFound: 'Aucune donnée trouvée !',
    deleteTitle: 'Supprimer',
    deleteReferralQuestion:
      'Est-ce que vous êtes sur de vouloir supprimer la référence {0} du {1}  ?',
    manageUsers: 'Docteurs',
    deleteReferralTitle: 'Supprimer une référence',
    customisation: 'Personnalisation',
    from: 'De',
    to: 'Á',
    date: 'Date/Temps',
    comment: 'Commentaire',
    itemNotSelected: 'Aucun élément sélectionné',
    importDataNotFound: 'Aucun élément trouvée !',
    consultationDate: 'Date de la consultation',
    close: 'Fermer',
    open: 'Ouvrir',
    select: 'Sélectionner ',
    transferRxSuccess: 'Rx transféré avec succès !',
    exportDataSuccess: 'Données transférées avec succès !',
    NoCameraAccess: 'Webcam non trouvé !',
    flip: 'Retourner',
    snapshot: 'Snapshot',
    somethingWentWrongTitle: "Oops! Quelque chose s'est mal passé.",
    somethingWentWrongMessage:
      "Désolé, Quelque chose s'est mal passé. Utilisez l'action ci-dessous !",
    restartApp: "Cliquez ici pour redémarrer l'application !",
    dragNDrop: 'Cliquez pour téléverser ou déposez votre document ici',
    takePicture: 'Prendre une Photo',
    uploadFile: 'Téléverser un Fichier',
    signedOn: 'Signé le',
    location: 'Lieu',
    noAccess: 'Vous n’avez pas accès à cette information',
    printRxLabel: 'Veuillez sélectionner ce que vous souhaitez imprimer:', //need to change accordingly,
    printExportLabel: 'Veuillez sélectionner ce que vous souhaitez exporter:',
    pd: 'PD',
    binocularPd: 'PD Binoculaire',
    notesOnRx: 'Notes sur Rx',
    drRecommendation: 'Dr Recommandation',
    all: 'Tout',
    startBlank: 'Commencer avec un dossier vierge',
    noRoom: 'Pas de salle',
    room: 'Salle',
    startFromVisit: "Commencer sur la base d'une consultation précédente",
    lockedOn: 'Verrouillé le',
    lastUpdateOn: 'Modifié le',
    lastUpdateBy: 'Modifié par',
    visitDeniedAccessError: "vous n'avez pas accès à ce dossier patient !",
    deniedAccessTitle: 'Accès Refusé',
    documentSize: 'Taille du document',
    documentCategory: 'Catégorie du document',
    attachment: 'Attachment',
    documentName: 'Nom du document',
    addExamMessage: 'Ajouter un nouvel examen',
    pdfNotSupported:
      'Ce document PDF ne peut être attaché à la référence pour le moment. Notre équipe de développment travaille présentement sur cette fonction afin de rendre cela possible et vous serez notifié dès que ce sera disponible!',
    dob: 'Date de Naissance',
    previous: 'Précédent',
    next: 'Suivant',
    weekly: 'Semaines',
    daily: 'Journalier',
    available: 'disponible',
    unAvailable: 'indisponible',
    lensometry: 'Lensométrie',
    keratometry: 'Kératométrie',
    autoRefractor: 'Auto Réfraction',
    exportAction: 'Exporter',
    billing: 'Facturation',
    multipleBuiltInTemplate:
      "Plus d'un modèle a été trouvé, veuillez sélectionner celui à utiliser !",
    machinePullSuccess:
      "L'interface machine a extrait avec succès les données !",
    clientConnected: 'Client connecté !',
    clientDisconnected: 'Client déconnecté !',
    patientAttachments: 'Pièces jointes pour patients',
    apply: 'Appliquer',
    chooseDoctor: 'Choisir Docteur',
    appointmentFor: 'Le rendez vous de',
    successfullyCopied:
      'a été copié ! Veuillez le reporter à une autre plage horaire.',
    selfPaid: 'Paiement personnel',
    bookingAppointmentError:
      "Ce rendez-vous a peut-être déjà été réservé sur un autre ordinateur, ou le nombre de créneaux demandés n'est pas libre !",
    insurer: 'Assureur',
    numberOfSlots: 'Nombre de créneaux',
    book: 'Réserver',
    AppointmentType: 'Type rendez-vous',
    cancelAppointment: 'Annuler le rendez-vous ',
    cancelledBy: 'Annulé par',
    rescheduleAppointment: 'Re-planifier un rendez-vous',
    reschedule: 'Re-planifier',
    showAllStores: "Afficher la liste d'attente pour tous les magasins",
    age: 'Âge',
    home: 'Domicile',
    cell: 'Cellule',
    work: 'Travail',
    appDateAndTime: 'Date et type de rendez-vous',
    successfullyRescheduled: 'Le rendez-vous a été reporté avec succès',
    lockScreenTitle: 'Votre session a expiré',
    enterPassword: 'Entrez votre mot de passe pour récupérer votre session',
    notLabel: 'Pas',
    resumeSession: 'Reprendre la session',
    iForgot: "J'ai oublié",
    doubleBook: 'Double réservation',
    sameSlot: 'Même créneau',
    first: 'Premier',
    last: 'Dernier',
    mins: 'mins',
    copyMessage:
      'Les données ont été copiées avec succès, veuillez les coller dans la case appropriée',
    finalRxCopyMessage:
      'Rx Finale copié avec succès! Veuillez coller dans la case appropriée de la visite en cours',
    time: 'Temps',
    createAvailability: 'Créer une disponibilité',
    markAsUnavailable: 'Marquer comme indisponible',
    familyDoctor: 'Médecin de famille',
    createUser: 'Créer un utilisateur',
    closedStoreTimeSlotErrorMessage:
      'La case horaire sélectionnée est hors des heures d’ouverture du magasin. Vous ne pouvez pas créer de disponibilité !',
    providerTitle: 'Pourvoyeur',
    loadMoreSummariesTitle: 'Charger plus de résumés...',
    reset: 'Réinitialiser',
    emailRx: 'Envoyer Rx',
    emailClRx: 'Envoyer RxVC',
    emailRxSuccess: 'Rx envoyé avec succès',
    createInvoice: 'Créer une facture',
    invoiceAgain: 'Facturer à nouveau',
    invoiceCreatedSuccessMessage: 'Facture(s) {0} créée(s) avec succès!',
    NoinvoiceCreatedMessage: 'Aucune facture créée pour cette visite!',
    support: 'Support',
    agentAssumptionTitle: "Formulaire d'agent",
    zendesk: 'Zendesk #',
    reason: 'Raison',
    agentLoginWarning:
      "Il s'agit d'un compte de production qui utilise des données privées. N'entrez aucune donnée patient réelle !",
  },
});

//console.log('Interface language is: '+strings.getInterfaceLanguage());

const supportedLanguages: string[] = [
  'en-US',
  '🇺🇸',
  'en-CA',
  '🇨🇦',
  'en-UK',
  '🇬🇧',
  'fr-CA',
  '🇫🇷',
];

let userLanguage: string;

export function getUserLanguage(): string {
  return userLanguage;
}

export function getUserLanguageIcon(): string {
  let languageIndex: number = supportedLanguages.indexOf(getUserLanguage());
  if (languageIndex < 0) {
    languageIndex = 0;
  }
  return supportedLanguages[languageIndex + 1];
}

export function getUserLanguageShort(): string {
  if (userLanguage === undefined) {
    return undefined;
  }
  return userLanguage.substring(0, 2);
}

async function setUserLanguage(locale: string) {
  console.log('Switching language to ' + locale);
  userLanguage = locale;
  strings.setLanguage(userLanguage.substring(0, 2));
  Moment.locale(userLanguage.substring(0, 2));
  //TODO: set number formatting localised
  cacheDefinitions(userLanguage);
}

export function switchLanguage() {
  let language = getUserLanguage();
  console.log('current language = ' + language);
  let languageIndex = supportedLanguages.indexOf(language);
  languageIndex = (languageIndex + 2) % supportedLanguages.length;
  language = supportedLanguages[languageIndex];
  AsyncStorage.setItem('userLanguage', language);
  setUserLanguage(language);
}

AsyncStorage.getItem('userLanguage').then((userLanguage) => {
  if (userLanguage === null || userLanguage === undefined) {
    userLanguage = strings.getInterfaceLanguage();
  }
  if (supportedLanguages.indexOf(userLanguage) < 0) {
    userLanguage = supportedLanguages[0];
  }
  setUserLanguage(userLanguage);
});
